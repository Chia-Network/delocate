.. -*- mode: rst -*-
.. vim:ft=rst

.. _changelog:

###################
Delocate change log
###################

`Matthew Brett` (MB) wrote most of the code.  Min Ragan-Kelley (MinRK) did a lot
of work discussing OSX things with MB, and contributes fixes too.

********
Releases
********

* 0.5.0 (Tuesday July 22 2014)

  Fourth public release

  * Add utilities and script to apply a patch to a wheel
  * Add utilities and script to test for architectures in libraries and
    require named architectures
  * Docstring fixes and refactoring

* 0.4.0 (Wednesday June 25 2014)

  Third public release

  * Set ``install_name_id`` for copied libraries to be unique to this package.
    OSX uses the ``install_name_id`` to identify a library uniquely on the
    system.  If two libraries have the same ``install_name_id`` when loaded into
    the process, then OSX will raise an error unless their compatibility number
    matches.  Delocate now sets the ``install_name_id`` to be more or less
    unique with a Python process at least.  This means OSX won't raise an error
    if you have two different libraries in two different packages (e.g hdf5
    libraries in ``h5py`` and ``pytables``.
  * Turn on compression for creating wheel zip files. Previously we were zipping
    without compression (because MB didn't know that was the default).
  * Raise an error if delocating attempts to copy two different libraries with
    the same name (therefore overwriting one with the other).
  * Add command and functions to do architecture fuse between two different
    wheels. This can be useful when you have to build a 32-bit and 64-bit wheel
    separately. In that case you can fuse the two wheels making fat (combined)
    architecture libraries, using ``delocate-fuse``.  Add supporting routines
    for detecting architecture of libraries and fusing libraries with different
    architectures.
  * Add use of ``os.path.expanduser`` to specified output wheel directory for
    ``delocate-wheel`` script. Now flag input like ``delocate-wheel -w ~/wheels
    some_wheel.whl`` will correctly output to ``$HOME/wheels``.

* 0.3.0 (Monday May 5 2014)

  Second public release

  * Switch to using just ``@loader_path`` rather than a combination of
    ``@loader_path`` and ``@rpath`` for pointing to relocated libraries.  Using
    ``@rpath`` was giving some errors of form::

        "install_name_tool: changing install names or rpaths can't be redone
        for: libsomething.dylib (for architecture x86_64) because larger updated
        load commands do not fit (the program must be relinked, and you may need
        to use -headerpad or -headerpad_max_install_names)

    |--| presumably because ``@rpath`` had been zero length before we got to the
    library.
  * Add flag to display depending libraries as well as the libraries a tree /
    wheel depends on.
  * Use canonical paths for depended and depending library paths, including
    following symbolic links.  This means that two links pointing to the same
    file don't appear to be two different libraries, causing an error when
    copying the second into the directory containing the copied libraries.
  * Don't raise an error when delocating a wheel that was previously delocated
    (MinRK)

* 0.2.1 (Monday March 31 2014)

  Bugfix release

  * Rewrite wheel RECORD file when writing wheel.  Delocated wheels were
    breaking ``wheel unpack`` command.

* 0.2.0 (Tuesday March 25 2014)

  First public release
